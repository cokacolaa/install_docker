---
- name: Install Docker and Docker Compose on Ubuntu
  hosts: all
  become: true

  vars:
    docker_gpg_url: https://download.docker.com/linux/ubuntu/gpg
    docker_key_path: /etc/apt/keyrings/docker.gpg

  tasks:
    - name: Install prerequisite packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create keyrings directory if not exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: "{{ docker_gpg_url }}"
        dest: "{{ docker_key_path }}"
        mode: '0644'

    - name: Add Docker APT repository with signed key
      apt_repository:
        repo: >
          deb [arch=amd64 signed-by={{ docker_key_path }}]
          https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release }} stable
        state: present
        filename: docker

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker Engine and Docker Compose plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Install legacy docker-compose binary (optional)
      get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker version
      command: docker --version
      register: docker_version_output
      changed_when: false

    - name: Show Docker version
      debug:
        msg: "{{ docker_version_output.stdout }}"

    - name: Verify docker-compose (plugin) version
      command: docker compose version
      register: compose_plugin_version
      changed_when: false

    - name: Show docker compose plugin version
      debug:
        msg: "{{ compose_plugin_version.stdout }}"

    - name: Verify docker-compose (legacy binary) version
      command: docker-compose --version
      register: legacy_compose_version
      changed_when: false
      ignore_errors: true

    - name: Show legacy docker-compose version
      debug:
        msg: "{{ legacy_compose_version.stdout | default('Not installed') }}"
